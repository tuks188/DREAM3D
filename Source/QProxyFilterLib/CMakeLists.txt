#--////////////////////////////////////////////////////////////////////////////
#--
#--  Copyright (c) 2012, Michael A. Jackson. BlueQuartz Software
#--  All rights reserved.
#--  BSD License: http://www.opensource.org/licenses/bsd-license.html
#--
#--////////////////////////////////////////////////////////////////////////////

#///////////////////////////////////////////////////////////////////////////////
#// This code was partly written under US Air Force Contract FA8650-07-D-5800
#///////////////////////////////////////////////////////////////////////////////

project(QProxyFilterLib)
cmake_minimum_required(VERSION 2.8.9)

set(Project_SRCS "")

# Set up our various files that were written during the DREAM3DLib build phase
set(CodeGeneratorFile_Proxy  ${QProxyFilterLib_BINARY_DIR}/CodeGenerator.h)
set(QProxyFilterLib_GEN_HDRS_File ${QProxyFilterLib_BINARY_DIR}/QProxyFilter_GEN_HDRS_File.cmake)
set(QProxyFilterLib_GEN_SRCS_File ${QProxyFilterLib_BINARY_DIR}/QProxyFilter_GEN_SRCS.cmake)

# Read the file back into a string so we can configure our file
#file(READ ${RegisterKnownQProxyFilterFile} QFILTERWIDGET_FACTORY_SOURCE)
file(READ ${CodeGeneratorFile_Proxy} CODE_GEN_FILTER_FUNCTION)
file(READ ${QProxyFilterLib_GEN_HDRS_File} QProxyFilterLib_GEN_HDRS)
file(READ ${QProxyFilterLib_GEN_SRCS_File} QProxyFilterLib_GEN_SRCS)

# Remove the temp files that we no longer need
#file(REMOVE ${CodeGeneratorFile})
#file(REMOVE ${QProxyFilterLib_GEN_HDRS_File})
#file(REMOVE ${QProxyFilterLib_GEN_SRCS_File})

# --------------------------------------------------------------------
# Create our custom executable that will generate most of our QFilterWidget
# classes from information stored in the Filters themselves.
set(FILTER_HEADERS "#include \"DREAM3DLib/DREAM3DFilters.h\"")
set(FILTER_WIDGETS_TEMP_DIR ${QProxyFilterLib_BINARY_DIR}/Temp)
set(FILTER_WIDGETS_BINARY_DIR ${QProxyFilterLib_BINARY_DIR}/DREAM3DLib)
set(FILTER_WIDGETS_SOURCE_DIR ${QProxyFilterLib_SOURCE_DIR})
set(FILTER_WIDGETS_DOCS_DIR ${DREAM3DProj_SOURCE_DIR}/Documentation/Filters)
set(FILTER_INCLUDE_PREFIX "DREAM3DLib")

file(MAKE_DIRECTORY ${QProxyFilterLib_BINARY_DIR}/Temp)
configure_file( ${QProxyFilterLib_SOURCE_DIR}/QProxyFilterCodeGen.h.in
                ${QProxyFilterLib_BINARY_DIR}/QProxyFilterCodeGen.h)
if(MSVC)
  set_source_files_properties(${QProxyFilterLib_SOURCE_DIR}/QProxyFilterCodeGen.h PROPERTIES COMPILE_FLAGS /bigobj)
  set_source_files_properties(${QProxyFilterLib_SOURCE_DIR}/QProxyFilterCodeGen.cpp PROPERTIES COMPILE_FLAGS /bigobj)
endif()
add_executable(QProxyFilterCodeGen  ${QProxyFilterLib_SOURCE_DIR}/QProxyFilterCodeGen.cpp
                                    ${QProxyFilterLib_BINARY_DIR}/QProxyFilterCodeGen.h)
target_link_libraries(QProxyFilterCodeGen MXA EbsdLib DREAM3DLib)


# Now run the code to generate the header files which will over write the place
# holder files that were generated from above
add_custom_command(TARGET QProxyFilterCodeGen POST_BUILD
                    COMMAND $<TARGET_FILE:QProxyFilterCodeGen> )


# --------------------------------------------------------------------
# Set some Include directories
include_directories(${QProxyFilterLib_SOURCE_DIR}/..)
include_directories(${QProxyFilterLib_SOURCE_DIR})
include_directories(${QProxyFilterLib_BINARY_DIR})

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( QProxyFilterLib_Generated_MOC_SRCS ${QProxyFilterLib_GEN_HDRS})
QT4_WRAP_CPP( QProxyFilterLib_MOC_SRCS ${QQProxyFilterLib_HDRS} )
# These generated moc files will be #include in the FilterWidget source file that
# are generated so we need to tell the build system to NOT compile these files
set_source_files_properties( ${QProxyFilterLib_Generated_MOC_SRCS} PROPERTIES HEADER_FILE_ONLY TRUE)
set_source_files_properties( ${QProxyFilterLib_MOC_SRCS} PROPERTIES HEADER_FILE_ONLY TRUE)

# -- Run MOC and UIC on the necessary files
# QT4_ADD_RESOURCES( QProxyFilterLib_Generated_RC_SRCS "${DREAM3DProj_SOURCE_DIR}/Documentation/Filters/Generated_FilterDocs.qrc"  )

# --------------------------------------------------------------------
#-- Put the Qt generated files into their own group for IDEs
cmp_IDE_SOURCE_PROPERTIES( "Generated/Qt_Moc" "" "${QProxyFilterLib_Generated_MOC_SRCS};${QProxyFilterLib_MOC_SRCS}" "0")
cmp_IDE_SOURCE_PROPERTIES( "Generated/Qt_Uic" "${QProxyFilterLib_Generated_UI_HDRS}" "" "0")
cmp_IDE_SOURCE_PROPERTIES( "Generated/Qt_Qrc" "${QProxyFilterLib_Generated_RC_SRCS}" "" "0")

# --------------------------------------------------------------------
# These files are generated by our custom command
cmp_IDE_SOURCE_PROPERTIES( "Generated/QProxyFilter" "${QProxyFilterLib_GEN_HDRS}" "${QProxyFilterLib_GEN_SRCS}" "0")

# --------------------------------------------------------------------
# Now add in any other headers or sources
#set(QProxyFilterLib_HDRS
#    ${QProxyFilterLib_SOURCE_DIR}/QFilterWidgetFactory.hpp
#    ${QProxyFilterLib_SOURCE_DIR}/QProxyFilterLib.h
#)
#
#set(QProxyFilterLib_SRCS
#    ${QProxyFilterLib_SOURCE_DIR}/QProxyFilterLib.cpp
#)
#cmp_IDE_SOURCE_PROPERTIES( "QProxyFilter" "${QProxyFilterLib_HDRS}" "${QProxyFilterLib_SRCS}" "0")

set(Project_SRCS
    ${QProxyFilterLib_SOURCE_DIR}/QProxyFilterLib.h
        ${QProxyFilterLib_HDRS}
        ${QProxyFilterLib_SRCS}
        ${QProxyFilterLib_GEN_HDRS}
        ${QProxyFilterLib_GEN_SRCS}
        ${QProxyFilterLib_MOC_SRCS}
        ${QProxyFilterLib_Generated_MOC_SRCS}
        ${QProxyFilterLib_Generated_UI_HDRS}
        ${QProxyFilterLib_Generated_RC_SRCS}
)



if(UNIX AND NOT APPLE)
    set_source_files_properties(${Project_SRCS} PROPERTIES COMPILE_FLAGS -fPIC)
endif()

add_library(QProxyFilterLib STATIC ${Project_SRCS})
target_link_libraries(QProxyFilterLib
                    MXA
                    H5Support
                    EbsdLib
                    DREAM3DLib
                    ${QT_QTCORE_LIBRARY}
                    )
#set_target_properties(QProxyFilter PROPERTIES AUTOMOC TRUE)
#add_dependencies(QProxyFilterLib_automoc QProxyFilterCodeGen)
add_dependencies(QProxyFilterLib QProxyFilterCodeGen)
LibraryProperties( QProxyFilterLib ${EXE_DEBUG_EXTENSION})
